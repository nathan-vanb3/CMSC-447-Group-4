{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DataToggle","id","checkedChildren","unCheckedChildren","DatePickerObject","RangePicker","DatePicker","MapObject","geoJSONStyle","color","fillColor","opacity","fillOpacity","Map","center","zoom","name","url","GeoJSON","data","countyBounds","style","this","React","Component","window","token","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"+QAiBA,SAASA,IACP,OACE,yBAAKC,GAAG,cACN,kBAAC,IAAD,CAAQC,gBAAgB,SAASC,kBAAkB,WAKzD,SAASC,IAAoB,IACpBC,EAAeC,IAAfD,YAEP,OACE,yBAAKJ,GAAG,cACN,kBAACI,EAAD,O,IAKAE,E,4MACJC,aAAe,CACbC,MAAO,OACPC,UAAW,QACXC,QAAS,GACTC,YAAa,I,uDAIb,OACE,kBAACC,EAAA,EAAD,CAAKZ,GAAG,YAAYa,OAAQ,CAAC,OAAQ,OAAQC,KAAM,GACjD,kBAAC,eAAD,CAAcC,KAAK,SACnB,kBAAC,eAAD,CAAcC,IAAI,qGAClB,kBAACC,EAAA,EAAD,CAASC,KAAMC,EAAcC,MAAQC,KAAKd,oB,GAb1Be,IAAMC,WA2BfC,OAAOC,MACPC,MAxDf,WACE,OACE,yBAAK1B,GAAG,YACN,kBAAC,EAAD,MACA,kBAACD,EAAD,MACA,kBAACI,EAAD,QCASwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,M","file":"js/main.087b078c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Switch, DatePicker} from 'antd';\nimport {Map, GeoJSON} from 'react-leaflet';\nimport {BasemapLayer, FeatureLayer} from 'react-esri-leaflet/v2';\nimport countyBounds from './gz_2010_us_050_00_20m.json';\n\nfunction App() {\n  return(\n    <div id='rootGrid'>\n      <MapObject />\n      <DataToggle />\n      <DatePickerObject />\n    </div>\n  );\n}\n\nfunction DataToggle() {\n  return(\n    <div id='dataToggle'>\n      <Switch checkedChildren='Deaths' unCheckedChildren='Cases'/>\n    </div>\n  );\n}\n\nfunction DatePickerObject() {\n  const {RangePicker} = DatePicker;\n\n  return(\n    <div id='datePicker'>\n      <RangePicker />\n    </div>\n  );\n}\n\nclass MapObject extends React.Component {\n  geoJSONStyle = {\n    color: 'gray',\n    fillColor: 'white',\n    opacity: .7,\n    fillOpacity: .3\n  };\n\n  render() {\n    return(\n      <Map id='mapObject' center={[39.82, -98.58]} zoom={5}>\n        <BasemapLayer name='Gray'/>\n        <FeatureLayer url='https://tigerweb.geo.census.gov/arcgis/rest/services/TIGERweb/Special_Land_Use_Areas/MapServer/1'/>\n        <GeoJSON data={countyBounds} style ={this.geoJSONStyle}/>\n      </Map>\n    );\n  }\n}\n\nfunction Tooltip() {\n  return(\n    <div>\n      <p>Placeholder Tooltip</p>\n    </div>\n  );\n}\n\n<p>My Token = {window.token}</p>\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}